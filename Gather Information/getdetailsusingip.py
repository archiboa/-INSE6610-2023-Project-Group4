from datetime import datetime
import subprocess
import os

def fetch_ip_details(ip_address, file_path):
    # Open the log file containing the IP address details
    with open(file_path, 'r') as file:
        # Read the lines from the file
        lines = file.readlines()

        # Flag to indicate if the IP address was found
        ip_found = False

        # List to store the fetched details
        details = []

        # Iterate through each line
        for line in lines:
            # Remove leading/trailing whitespaces and split the line by ":"
            parts = line.strip().split(":")

            # Check if the line represents the IP address
            if len(parts) >= 2 and parts[0] == "For IP Address" and parts[1].strip() == ip_address:
                ip_found = True
                continue

            # Check if the IP address has been found and fetch the details
            if ip_found:
                if len(parts) >= 2:
                    key = parts[0].strip()
                    value = ":".join(parts[1:]).strip()  # Handle values that contain additional ":"
                    details.append(f"{key}: {value}")
                else:
                    # If the line doesn't match the format, it means we have moved to the next IP address
                    break

        # Print a message if the IP address was not found in the file
        if not ip_found:
            print("IP address not found in the file.")
            return

        # Save the fetched details to a new file
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        with open("Logs/OnlineActivitiesGatheredByIp.txt", "a") as output_file:
            output_file.write(f"Timestamp: {timestamp}, IP Address: {ip_address}\n")
            for detail in details:
                output_file.write(detail + "\n")
            output_file.write("\n")


def get_encountered_ips(file_path):
    # Open the log file containing the IP address details
    with open(file_path, 'r') as file:
        # Read the lines from the file
        lines = file.readlines()

        # Set to store the encountered IPs
        ips = set()

        # Iterate through each line
        for line in lines:
            # Remove leading/trailing whitespaces and split the line by ":"
            parts = line.strip().split(":")

            # Check if the line represents an IP address
            if len(parts) >= 2 and parts[0] == "For IP Address":
                ip_address = parts[1].strip()
                ips.add(ip_address)

        return ips


# Provide the path to the log file generated by the previous code
file_path = "Logs/OnlineActivities.log"


# Get the encountered IPs from the log file
if os.path.exists(file_path):
    encountered_ips = get_encountered_ips(file_path)

    # Print the list of encountered IPs
    print("Encountered IPs:")
    print(", ".join(encountered_ips))

    # Get the IP address from the user
    ip_address = input("Enter the IP address: ")

    # Call the function to fetch IP details and save them in a file
    fetch_ip_details(ip_address, file_path)
    print("Data Saved in Logs/OnlineActivitiesGatheredByIp.log. Note that this file overwrites existing log file.")
else:
    python_program_path = "OnlineActivity.py"  # Replace with the path to your Python program
    subprocess.run(['python3', python_program_path])
    encountered_ips = get_encountered_ips(file_path)

    # Print the list of encountered IPs
    print("Encountered IPs:")
    print(", ".join(encountered_ips))

    # Get the IP address from the user
    ip_address = input("Enter the IP address: ")

    # Call the function to fetch IP details and save them in a file
    fetch_ip_details(ip_address, file_path)
    print("Data Saved in Logs/OnlineActivitiesGatheredByIp.log. Note that this file overwrites existing log file.")
